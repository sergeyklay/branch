# Copyright (C) 2021 Serghei Iakovlev <egrep@protonmail.ch>
#
# This file is free software; you can redistribute it and/or
# modify it under the terms of the GNU General Public License
# as published by the Free Software Foundation; either version 3
# of the License, or (at your option) any later version.
#
# This file is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with this file.  If not, see <https://www.gnu.org/licenses/>.

name: CI

on:
  push:
    branches:
      - master
      - 'feature/**'
      - 'release/**'
      - 'fix/**'
    tags:
      - 'v[0-9]+.[0-9]+.[0-9]+'
  # The branches below must be a subset of the branches above
  pull_request:
    branches:
      - master

  schedule:
    - cron: '0 11 * * *'
      #      | | | | |
      #      | | | | |____ day of the week (0 - 6 or SUN-SAT)
      #      | | | |____ month (1 - 12 or JAN-DEC)
      #      | | |____ day of the month (1 - 31)
      #      | |____ hour (0 - 23)
      #      |____ minute (0 - 59)

env:
  NPM: npm
  PYTHON: python
  PYTHONUNBUFFERED: '1'

defaults:
  run:
    shell: bash

jobs:
  test:
    runs-on: ${{ matrix.os }}
    name: Python ${{ matrix.python }} on ${{ matrix.os }}

    # The maximum number of minutes to let a workflow run
    # before GitHub automatically cancels it. Default: 360
    timeout-minutes: 30

    strategy:
      # When set to true, GitHub cancels
      # all in-progress jobs if any matrix job fails.
      fail-fast: false

      matrix:
        python:
          - '3.7'
          - '3.8'
          - '3.9'
          - '3.10'
        os:
          - ubuntu-20.04
          - macos-latest
          - windows-2019

    steps:
      - name: Checkout code
        uses: actions/checkout@v2.4.0
        with:
          fetch-depth: 5

      - name: Set up Python ${{ matrix.python }}
        uses: actions/setup-python@v2.2.2
        with:
          python-version: ${{ matrix.python }}

      - name: Setup Prerequisites (Linux)
        if: startsWith(runner.os, 'Linux')
        run: |
          echo 'debconf debconf/frontend select Noninteractive' | sudo debconf-set-selections

          # Make sure the development packages of libxml2 and libxslt are
          # installed. This is needed for pyquery.
          if [ "${{ matrix.python }}" = "3.10.0-beta - 3.10" ]; then
            sudo apt-get update --quiet --yes 1>/dev/null
            sudo apt-get install --no-install-recommends -q -y \
              libxml2-dev libxslt-dev
          fi

      - name: Print build system information
        run: python .github/workflows/system-info.py

      - name: Get pip cache dir
        id: pip-cache
        run: echo "::set-output name=dir::$(python -m pip cache dir)"

      - name: Set up pip cache
        uses: actions/cache@v2.1.6
        with:
          path: ${{ steps.pip-cache.outputs.dir }}
          key: ${{ runner.os }}-pip-${{ hashFiles('requirements.txt') }}
          restore-keys: |
            ${{ runner.os }}-pip-

      - name: Set up Nodejs
        uses: actions/setup-node@v2.4.1
        with:
          node-version: '14'

      - name: Get npm cache directory
        id: npm-cache-dir
        run: echo "::set-output name=dir::$(npm config get cache)"

      - name: Set up npm cache
        uses: actions/cache@v2.1.6
        id: npm-cache
        with:
          path: ${{ steps.npm-cache-dir.outputs.dir }}
          key: ${{ runner.os }}-node-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-node-

      - name: Makefile selftest
        run: make help

      - name: Set up virtualenv
        run: make init

      - name: Setup Prerequisites (Windows)
        if: startsWith(runner.os, 'Windows')
        run: |
          if [ "${{ matrix.python }}" = "3.10.0-beta - 3.10" ]; then
            # Install precompiled lxml WHL with required modules/dependencies.
            .venv/Scripts/python -m pip install .github/lxml-4.6.3-cp310-cp310-win_amd64.whl
          fi

      - name: Install dependencies
        run: |
          make install
          npm install
          npm install -g sass

      - name: Setuptools self-test
        run: |
          python setup.py --fullname
          python setup.py --long-description
          python setup.py --classifiers

      - name: Create project-wide constants
        run: |
          # Don't care about these values. They only have to be (any).
          echo 'BUILD_ID = "e23893d4-6150f777"' > build.py
          echo 'BUILD_ID_SHORT = "e238"' >> build.py
          echo 'BUILD_DATE_SHORT = "2021-09-26"' >> build.py
          echo 'DOMAIN = "example.com"' >> build.py

      - name: Run unit tests with coverage
        run: make test
        env:
          RECAPTCHA_PUBLIC_KEY: ${{ secrets.RECAPTCHA_PUBLIC_KEY }}
          RECAPTCHA_PRIVATE_KEY: ${{ secrets.RECAPTCHA_PRIVATE_KEY }}

      - name: Combine coverage reports
        run: make ccov

      - name: Upload coverage report
        if: success()
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          COVERALLS_SERVICE_NAME: github
        run: |
          python -m pip --use-feature=in-tree-build install coveralls
          # Do not fail job if coveralls.io is down
          coveralls || true

      - name: Success Reporting
        if: success()
        run: git log --format=fuller -5

      - name: Archive storage artifacts
        if: always()
        uses: actions/upload-artifact@v2
        with:
          # To ensure that jobs don't overwrite existing artifacts,
          # use a different name per job.
          name: storage-python.${{ matrix.python }}-${{ matrix.os }}
          path: storage
          # Artifacts are retained for 90 days by default.
          # In fact, we don't need such long period.
          retention-days: 30
