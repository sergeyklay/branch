# Copyright (C) 2021 Serghei Iakovlev <egrep@protonmail.ch>
#
# This file is free software; you can redistribute it and/or
# modify it under the terms of the GNU General Public License
# as published by the Free Software Foundation; either version 3
# of the License, or (at your option) any later version.
#
# This file is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with this file.  If not, see <https://www.gnu.org/licenses/>.

name: CI

on:
  push:
    branches:
      - master
      - 'v[0-9]+.[0-9]+.x'
      - 'feature/**'
      - 'fix/**'
    tags:
      - 'v[0-9]+.[0-9]+.[0-9]+'
  pull_request:
    branches:
      - master
      - 'v[0-9]+.[0-9]+.x'
  schedule:
    - cron: '0 11 * * *'
      #      | | | | |
      #      | | | | |____ day of the week (0 - 6 or SUN-SAT)
      #      | | | |____ month (1 - 12 or JAN-DEC)
      #      | | |____ day of the month (1 - 31)
      #      | |____ hour (0 - 23)
      #      |____ minute (0 - 59)

env:
  NPM: npm
  PYTHON: python
  BRANCH_ENV: test
  PYTHONUNBUFFERED: '1'

defaults:
  run:
    shell: bash

jobs:
  test:
    runs-on: ${{ matrix.os }}
    name: Python ${{ matrix.python }} on ${{ matrix.os }}
    continue-on-error: ${{ matrix.experimental }}

    # The maximum number of minutes to let a workflow run
    # before GitHub automatically cancels it. Default: 360
    timeout-minutes: 30

    strategy:
      # When set to true, GitHub cancels
      # all in-progress jobs if any matrix job fails.
      fail-fast: false

      matrix:
        python:
          - '3.7'
          - '3.8'
          - '3.9'
        os:
          - ubuntu-20.04
          - macos-latest
          - windows-2019
        experimental: [false]
        include:
          - python: '3.10.0-alpha.7'
            os: ubuntu-20.04
            experimental: true
          - python: '3.10.0-alpha.7'
            os: macos-latest
            experimental: true

    steps:
      - name: Checkout code
        uses: actions/checkout@v2
        with:
          fetch-depth: 5

      - name: Set up Python ${{ matrix.python }}
        uses: actions/setup-python@v2
        with:
          python-version: ${{ matrix.python }}

      - name: Get pip cache dir
        id: pip-cache
        run: echo "::set-output name=dir::$(pip cache dir)"

      - name: Set up pip cache
        uses: actions/cache@v2.1.5
        with:
          path: ${{ steps.pip-cache.outputs.dir }}
          key: ${{ runner.os }}-pip-${{ hashFiles('requirements/requirements.txt') }}-${{ hashFiles('requirements/requirements-dev.txt') }}
          restore-keys: |
            ${{ runner.os }}-pip-

      - name: Set up Nodejs
        uses: actions/setup-node@v2
        with:
          node-version: '14'

      - name: Get npm cache directory
        id: npm-cache-dir
        run: echo "::set-output name=dir::$(npm config get cache)"

      - name: Set up npm cache
        uses: actions/cache@v2.1.5
        id: npm-cache
        with:
          path: ${{ steps.npm-cache-dir.outputs.dir }}
          key: ${{ runner.os }}-node-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-node-

      - name: Makefile selftest
        run: make help

      - name: Install dependencies
        run: make install

      - name: Configuration of the application
        run: cp ./settings.env.dist ./settings.env

      - name: Run migrations
        run: make migrate

      - name: Setuptools self-test
        run: |
          case ${{ runner.os }} in
            Windows*)
              source .venv/Scripts/activate ;;
            *)
              source .venv/bin/activate ;;
          esac

          python setup.py --fullname
          python setup.py --long-description
          python setup.py --classifiers

      - name: Run unit tests with coverage
        run: make test

      - name: Success Reporting
        if: success()
        run: git log --format=fuller -5

  lint:
    runs-on: ubuntu-20.04
    name: Code linting

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up Python 3.9
        uses: actions/setup-python@v2
        with:
          python-version: '3.9'

      - name: Install dependencies
        run: make install

      - name: Code linting
        run: make lint
        env:
          DJANGO_SETTINGS_MODULE: branch.settings.test
          SECRET_KEY: Naive and not very secret key used for tests
