# Copyright (C) 2021 Serghei Iakovlev <egrep@protonmail.ch>
#
# This file is free software; you can redistribute it and/or
# modify it under the terms of the GNU General Public License
# as published by the Free Software Foundation; either version 3
# of the License, or (at your option) any later version.
#
# This file is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with this file.  If not, see <https://www.gnu.org/licenses/>.

upstream branch_app {
    # fail_timeout=0 means we always retry an upstream even if it failed
    # to return a good HTTP response

    # for UNIX domain socket setups
    server unix:/run/branch.sock fail_timeout=0;

    # for a TCP configuration
    # server 192.168.0.7:8000 fail_timeout=0;
}

server {
    listen 80;
    listen 443 ssl http2;

    ssl_certificate /etc/letsencrypt/live/serghei.blog/fullchain.pem; # managed by Certbot
    ssl_certificate_key /etc/letsencrypt/live/serghei.blog/privkey.pem; # managed by Certbot
    include /etc/letsencrypt/options-ssl-nginx.conf; # managed by Certbot
    ssl_dhparam /etc/letsencrypt/ssl-dhparams.pem; # managed by Certbot

    server_name www.serghei.blog;
    return 301 $scheme://serghei.blog$request_uri;
}

server {
    listen 80;
    listen 443 ssl http2;

    ssl_certificate /etc/letsencrypt/live/serghei.blog/fullchain.pem; # managed by Certbot
    ssl_certificate_key /etc/letsencrypt/live/serghei.blog/privkey.pem; # managed by Certbot
    include /etc/letsencrypt/options-ssl-nginx.conf; # managed by Certbot
    ssl_dhparam /etc/letsencrypt/ssl-dhparams.pem; # managed by Certbot

    if ($scheme != "https") {
        return 301 https://$host$request_uri;
    }

    server_name serghei.blog;

    charset utf-8;

    # Timeouts
    client_body_timeout 12;
    client_header_timeout 12;
    keepalive_timeout 15;
    send_timeout 10;

    # Buffers
    client_body_buffer_size 10K;
    client_header_buffer_size 1k;
    client_max_body_size 8m;
    large_client_header_buffers 2 1k;

    # To enable rewrite logging turn 'notice' level for error logs:
    #
    # error_log  /var/log/nginx/branch.error.log notice;
    # rewrite_log on;
    #
    access_log /var/log/nginx/branch.access.log main;
    error_log  /var/log/nginx/branch.error.log error;

    include /etc/nginx/directives/rewrite-rules-django.conf;
    include /etc/nginx/directives/rewrite-rules-old-blog.conf;

    include /etc/nginx/locations/letsencrypt-acme-challenge.conf;
    include /etc/nginx/locations/protect-system-files.conf;
    include /etc/nginx/locations/protect-admin-requests.conf;
    include /etc/nginx/locations/block-flooding-requests.conf;
    include /etc/nginx/locations/block-flooding-requests-extra-1.conf;

    location ~ ^/(static|media)/ {
        expires 1w;
        gzip_static on;
        autoindex off;

        root /var/www/branch/;
    }

    location ~ ^/(?:(?:robots|humans)\.txt|browserconfig\.xml|site\.webmanifest) {
        gzip_static on;

        root /var/www/branch/static;

        access_log off;
        log_subrequest off;
    }

    location ~ ^/(?:favicon.*\.(?:ico|png)|(?:apple-touch-icon|mstile|android-chrome).*\.png)$ {
        expires max;
        gzip_static on;
        root /var/www/branch/static/icons;
        access_log off;
        log_subrequest off;
    }

    location / {
        include /etc/nginx/directives/block-php-flooding-requests.conf;

        # checks for static file, if not found proxy to app
        try_files $uri @proxy_to_app;
    }

    location @proxy_to_app {
        include /etc/nginx/directives/proxy-params.conf;
        proxy_pass http://branch_app;
    }

    # TODO
    # error_page 403 /403.html;
    # error_page 404 /404.html;
    # error_page 500 /500.html;
    # error_page 502 /502.html;
    #
    # location ~ ^/(403|404|500|502).html$ {
    #     root /var/www/branch/static;
    # }
}
